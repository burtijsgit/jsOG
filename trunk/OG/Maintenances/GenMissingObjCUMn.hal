external inner procedure ExtractObj(string,var Integer,var string);
external updating procedure CheckAndCreateCUObject(var Record CUVc);

global
updating procedure GenMissingObjCUMn(record RcVc RepSpec)
begin
  record CUVc CUr,OldCUr;
  record CrObjBlock CrObjr;
  record ObjVc Objr;
  integer pos;
  boolean TrHs, testf;
  string 60 frcu,tocu,OneObj;
  
  BlockLoad(CrObjr);
  
  frcu = FirstInRange(RepSpec.f1,60);
  tocu = LastInRange(RepSpec.f1,60);
  if (RepSpec.ArtMode>0) then begin
    CUr.Code = RepSpec.f1;
    TrHs = true;
    while (LoopMain(Cur,1,TrHs)) begin
      if (NonBlank(RepSpec.f1) and (Cur.Code<frcu or Cur.Code>tocu)) then begin
        TrHs = false;
      end;
      testf = true;
      if (blank(Cur.Objects) and blank(Cur.Objects)) then begin
        testf = false;
      end;
      if (TrHs and testf) then begin
      
        if (NonBlank(Cur.Objects)) then begin
          pos = 0;
          OneObj = "";
          ExtractObj(Cur.Objects,pos,OneObj);
          while (NonBlank(OneObj)) begin
            Objr.Code = OneObj;
            if !(ReadFirstMain(Objr,1,true)) then begin
              RecordNew(Objr);
              Objr.Code = OneObj;
              Objr.Comment = CUr.Name;
              Objr.OTCode = CrObjr.ObjTyp;
              if (RecordStore(Objr,true)) then begin end;
            end;
            ExtractObj(Cur.Objects,pos,OneObj);
          end;
        end;
        if (NonBlank(Cur.VEObjects)) then begin
          pos = 0;
          OneObj = "";
          ExtractObj(Cur.VEObjects,pos,OneObj)
          while (NonBlank(OneObj)) begin
            Objr.Code = OneObj;
            if !(ReadFirstMain(Objr,1,true)) then begin
              RecordNew(Objr);
              Objr.Code = OneObj;
              Objr.Comment = CUr.Name;
              Objr.OTCode = CrObjr.ObjTyp;
              if (RecordStore(Objr,true)) then begin end;
            end;
            ExtractObj(Cur.VEObjects,pos,OneObj);
          end;
        end;
        
      end;
    end;
  end else begin
    CUr.Code = RepSpec.f1;
    TrHs = true;
    while (LoopMain(Cur,1,TrHs)) begin
      if (NonBlank(RepSpec.f1) and (Cur.Code<frcu or Cur.Code>tocu)) then begin
        TrHs = false;
      end;
      testf = true;
      if (TrHs and testf) then begin
        if (RepSpec.flags[1]>0) then begin
          Cur.Objects = "";
          Cur.VEObjects = "";
        end;
        RecordCopy(OldCUr,CUr);
        CheckAndCreateCUObject(CUr);
        if (RecordUpdate(OldCUr,CUr,false)==1) then begin
        end;
      end;
    end;
  end;
    
return;
end;