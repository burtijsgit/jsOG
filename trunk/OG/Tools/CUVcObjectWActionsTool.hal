global
function integer CrObjTClassObjTypEFAfterRemote(record CrObjBlock CrObjr)
begin
  record OTVc OTr;
  integer res;
  
  res = 0;
  if (blank(CrObjr.ObjTyp) and CrObjr.Enable==1) then begin
    res = 1;
    CrObjr.ObjTyp="";
    CrObjr.Enable = 0;
  end;
  if (NonBlank(CrObjr.ObjTyp)) then begin
    Otr.Code = CrObjr.ObjTyp;
    if !(ReadFirstMain(OTr,1,true)) then begin
      res = 1;
      CrObjr.ObjTyp="";
      CrObjr.Enable = 0;
    end;
  end;
  
  if (res==0) then begin
    if (nonblank(OTr.Start)) then begin
      if (left(CrObjr.ObjVen,(len(OTr.Start)))!=OTr.Start) then begin
        res = 1;
        CrObjr.ObjVen = "";
      end;
      if (left(CrObjr.ObjCust,(len(OTr.Start)))!=OTr.Start) then begin
        res = 1;
        CrObjr.ObjCust = "";
      end;
    end;
  end;
  
  CrObjTClassObjTypEFAfterRemote = res;
return;
end;

global
function integer CrObjTClassUserObjTypEFAfterRemote(record CrObjBlock CrObjr)
begin
  record OTVc OTr;
  integer res;
  
  res = 0;
  if (NonBlank(CrObjr.UserObjTyp)) then begin
    Otr.Code = CrObjr.UserObjTyp;
    if (ReadFirstMain(OTr,1,true)) then begin
      if (nonblank(OTr.Start)) then begin
        if (left(CrObjr.ObjUser,(len(OTr.Start)))!=OTr.Start) then begin
          res = 1;
          CrObjr.ObjUser = "";
        end;
      end;
    end;
  end;
  
  CrObjTClassUserObjTypEFAfterRemote = res;
  return;
end;